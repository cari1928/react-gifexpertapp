{"version":3,"sources":["components/GifExpertApp/GifExpertApp.jsx","helpers/getGifs.js","components/GifExpertApp/GifGrid/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp/GifGrid/GifGridItem/GifGridItem.jsx","components/AddCategory/AddCategory.jsx","index.js"],"names":["GifExpertApp","useState","categories","setCategories","map","category","getGifs","a","URL","encodeURI","fetch","answer","json","data","gifs","img","id","title","url","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","className","GifGridItem","src","alt","AddCategory","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prev","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"oMAoBeA,EAjBM,WACpB,MAAoCC,mBAAS,CAAC,cAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACC,qCACC,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACED,EAAWE,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,+BCdNC,EAAO,uCAAG,WAAOD,GAAP,uBAAAE,EAAA,4DACN,mCACVC,EAFgB,iDAEgCC,UACrDJ,GAHqB,6BACN,oCADM,SAMDK,MAAMF,GANL,cAMhBG,EANgB,gBAOCA,EAAOC,OAPR,uBAOdC,EAPc,EAOdA,KAEFC,EAAOD,EAAKT,KAAI,SAACW,GAAD,YAAU,CAC/BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAZb,kBAefJ,GAfe,4CAAH,sDC+BLO,EA1BC,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SAClB,ECD2B,SAACA,GAC5B,MAA0BJ,mBAAS,CAClCY,KAAM,GACNS,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACTnB,EAAQD,GAAUqB,MAAK,SAACC,GAEvBH,EAAS,CACRX,KAAMc,EACNL,SAAS,SAIT,CAACjB,IAEGkB,EDhB2BK,CAAavB,GAAjCc,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAEtB,OACC,qCACC,oBAAIO,UAAU,oCAAd,SAAmDxB,IAElDiB,GACA,mBAAGO,UAAU,mCAAb,wBAGD,qBAAKA,UAAU,YAAf,SACC,6BACEV,EAAOf,KAAI,SAACW,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eEFbc,EAdK,SAAC,GAAoB,IAAlBb,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC7B,OACC,sBAAKW,UAAU,yCAAf,UACC,qBAAKE,IAAKb,EAAKc,IAAKf,IACpB,4BAAIA,Q,OC2BQgB,EA/BK,SAAC,GAAuB,IAArB9B,EAAoB,EAApBA,cACtB,EAAoCF,mBAAS,IAA7C,mBAAOiC,EAAP,KAAmBC,EAAnB,KAeA,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BrC,GAAc,SAACsC,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAlBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,aCDzBG,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.cb69cfd9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { AddCategory, GifGrid } from \"components\";\n\nconst GifExpertApp = () => {\n\tconst [categories, setCategories] = useState([\"Jimin AOA\"]);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Gif Expert App</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr />\n\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\nexport default GifExpertApp;\n","export const getGifs = async (category) => {\n\tconst API_KEY = \"lZq9kF3d3LLSNFgxMuCirI5f5WFOdlCi\";\n\tconst URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tcategory\n\t)}&limit=10&api_key=${API_KEY}`;\n\n\tconst answer = await fetch(URL);\n\tconst { data } = await answer.json();\n\n\tconst gifs = data.map((img) => ({\n\t\tid: img.id,\n\t\ttitle: img.title,\n\t\turl: img.images?.downsized_medium.url,\n\t}));\n\n\treturn gifs;\n};\n","import React from \"react\";\nimport { GifGridItem } from \"components\";\nimport { useFetchGifs } from \"hooks\";\nimport PropTypes from \"prop-types\";\n\nconst GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n\t\t\t{loading && (\n\t\t\t\t<p className=\"animate__animated animate__flash\">Loading...</p>\n\t\t\t)}\n\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t<ol>\n\t\t\t\t\t{images.map((img) => (\n\t\t\t\t\t\t<GifGridItem key={img.id} {...img} />\n\t\t\t\t\t))}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nGifGrid.propTypes = {\n\tcategory: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"helpers\";\n\n// this is a hook\n// differences with a func comp: does not require React, does not return jsx\nexport const useFetchGifs = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((imgs) => {\n\t\t\t// setTimeout(() => {\n\t\t\tsetState({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t\t// }, 3000);\n\t\t});\n\t}, [category]);\n\n\treturn state;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GifGridItem = ({ title, url }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nGifGridItem.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\turl: PropTypes.string.isRequired,\n};\n\nexport default GifGridItem;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState(\"\");\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategories((prev) => [inputValue, ...prev]);\n\t\t\tsetInputValue(\"\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { GifExpertApp } from \"components\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}